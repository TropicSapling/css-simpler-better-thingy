include legacy-css;   // includes 'legacy_css.css'
include other-styles; // includes 'other_styles.cssmm'

// Global variables like in Sass.
$def-txt-color: black;

// We say text is black by default,
// then override later for text in grid.
* {txt-color: $def-txt-color}

test {height: 100%}

// Your "rules" basically but with different syntax.
// '$bg-color: black' defines a variable with default value 'black'
grid($bg-color: black, $txt-color: white, $space-between-elements) {

	grid: ==============
		  obj1 obj2 obj3
		  ____ obj4 ____  // underscore '_' for blank space
		  obj5 obj6 obj7
		  ==============

	grid-gap: $space-between-elements

	bg-color: $bg-color
	txt-color: $txt-color

	////////////////////////////////////////////////////////////////

	// no '>' for 'grid obj {...}'
	obj {
		width, height: 200px // same width & height
		bg-color: blue // grid elements blue by default
		margin: 10px // NOTE: margin & width/height relate to eachother in expected way
	}

	// '>' for 'grid > obj4 {...}'
	> obj4 {bg-color: red} // override for this grid element only

}

obj8 {align: top left}
obj9 {align: bottom+10% center-10%}

// Also possible to mix in with normal CSS
@css {
	@font-face {
		font-family: Viking;
		src: url(../fonts/Viking.ttf);
	}
}
